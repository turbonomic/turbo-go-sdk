// Code generated by protoc-gen-go.
// source: IdentityMetadata.proto
// DO NOT EDIT!

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// EntityIdentityMetadata supplies meta information describing the properties used to
// identify an entity of a specific entity type.
type EntityIdentityMetadata struct {
	// The EntityType this metadata is for
	EntityType *EntityDTO_EntityType `protobuf:"varint,1,req,name=entityType,enum=common_dto.EntityDTO_EntityType" json:"entityType,omitempty"`
	// The version of the identifying properties for this entity type
	Version *int32 `protobuf:"varint,2,opt,name=version,def=0" json:"version,omitempty"`
	// The non-volatile identifying properties to be used
	// for this entity type. non-volatile identifying properties are the set of properties
	// necessary to identify an entity that will not change over the lifetime of the entity.
	// For example, "ID" will be a non-volatile identifying property for most entity types.
	NonVolatileProperties []*EntityIdentityMetadata_PropertyMetadata `protobuf:"bytes,3,rep,name=nonVolatileProperties" json:"nonVolatileProperties,omitempty"`
	// The volatile identifying properties to be used for this entity type.
	// Volatile identifying properties are the set of properties necessary to identify
	// an entity that may change over the lifetime of the entity. For example, for a VM,
	// the "PM_UUID" may be identifying, but moving the VM will cause the value of this property
	// to change.
	VolatileProperties []*EntityIdentityMetadata_PropertyMetadata `protobuf:"bytes,4,rep,name=volatileProperties" json:"volatileProperties,omitempty"`
	// The heuristic properties to be used for this entity type. Heuristic properties
	// are used to fuzzy match an entity's identity when an exact match using the
	// identifying non-volatile and volatile properties fails.
	HeuristicProperties []*EntityIdentityMetadata_PropertyMetadata `protobuf:"bytes,5,rep,name=heuristicProperties" json:"heuristicProperties,omitempty"`
	// The heuristic threshold is used by the identity service when matching heuristic properties
	// to determine what percentage of heuristic properties must match in order to consider
	// two objects to be the same. A heuristicThreshold of 50 would mean that at least 1/2 of
	// the heuristic properties must match for two entities to be considered to be the same.
	// This must be a value between 0 and 100.
	HeuristicThreshold *int32 `protobuf:"varint,6,opt,name=heuristicThreshold,def=75" json:"heuristicThreshold,omitempty"`
	XXX_unrecognized   []byte `json:"-"`
}

func (m *EntityIdentityMetadata) Reset()                    { *m = EntityIdentityMetadata{} }
func (m *EntityIdentityMetadata) String() string            { return proto.CompactTextString(m) }
func (*EntityIdentityMetadata) ProtoMessage()               {}
func (*EntityIdentityMetadata) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

const Default_EntityIdentityMetadata_Version int32 = 0
const Default_EntityIdentityMetadata_HeuristicThreshold int32 = 75

func (m *EntityIdentityMetadata) GetEntityType() EntityDTO_EntityType {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return EntityDTO_SWITCH
}

func (m *EntityIdentityMetadata) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Default_EntityIdentityMetadata_Version
}

func (m *EntityIdentityMetadata) GetNonVolatileProperties() []*EntityIdentityMetadata_PropertyMetadata {
	if m != nil {
		return m.NonVolatileProperties
	}
	return nil
}

func (m *EntityIdentityMetadata) GetVolatileProperties() []*EntityIdentityMetadata_PropertyMetadata {
	if m != nil {
		return m.VolatileProperties
	}
	return nil
}

func (m *EntityIdentityMetadata) GetHeuristicProperties() []*EntityIdentityMetadata_PropertyMetadata {
	if m != nil {
		return m.HeuristicProperties
	}
	return nil
}

func (m *EntityIdentityMetadata) GetHeuristicThreshold() int32 {
	if m != nil && m.HeuristicThreshold != nil {
		return *m.HeuristicThreshold
	}
	return Default_EntityIdentityMetadata_HeuristicThreshold
}

type EntityIdentityMetadata_PropertyMetadata struct {
	// The name of the property.
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EntityIdentityMetadata_PropertyMetadata) Reset() {
	*m = EntityIdentityMetadata_PropertyMetadata{}
}
func (m *EntityIdentityMetadata_PropertyMetadata) String() string { return proto.CompactTextString(m) }
func (*EntityIdentityMetadata_PropertyMetadata) ProtoMessage()    {}
func (*EntityIdentityMetadata_PropertyMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 0}
}

func (m *EntityIdentityMetadata_PropertyMetadata) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*EntityIdentityMetadata)(nil), "common_dto.EntityIdentityMetadata")
	proto.RegisterType((*EntityIdentityMetadata_PropertyMetadata)(nil), "common_dto.EntityIdentityMetadata.PropertyMetadata")
}

func init() { proto.RegisterFile("IdentityMetadata.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x90, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x86, 0x49, 0xd2, 0x7e, 0x1f, 0x8e, 0xa2, 0xb2, 0x62, 0x09, 0x3d, 0xe8, 0xea, 0x29, 0xa7,
	0x45, 0xaa, 0x22, 0x78, 0x54, 0x7b, 0xf0, 0x20, 0x2d, 0x12, 0xbc, 0xca, 0x9a, 0x5d, 0xc9, 0x62,
	0x76, 0x27, 0xec, 0x4e, 0x03, 0xfd, 0x2d, 0xfe, 0x59, 0x69, 0x52, 0x5a, 0x31, 0xb7, 0xde, 0x96,
	0x9d, 0x79, 0x1e, 0xde, 0x79, 0x61, 0xf4, 0xac, 0xb4, 0x23, 0x43, 0xcb, 0x17, 0x4d, 0x52, 0x49,
	0x92, 0xa2, 0xf6, 0x48, 0xc8, 0xa0, 0x40, 0x6b, 0xd1, 0xbd, 0x2b, 0xc2, 0xf1, 0xd1, 0x63, 0xfb,
	0x7e, 0xca, 0x67, 0xdd, 0xf0, 0xf2, 0x3b, 0x81, 0xd1, 0xb4, 0xa5, 0xfe, 0xd2, 0xec, 0x06, 0xa0,
	0xfb, 0xc9, 0x97, 0xb5, 0x4e, 0x23, 0x1e, 0x67, 0x87, 0x13, 0x2e, 0xb6, 0x32, 0xd1, 0x71, 0x2b,
	0xd7, 0x74, 0xb3, 0xc7, 0x18, 0xfc, 0x6f, 0xb4, 0x0f, 0x06, 0x5d, 0x1a, 0xf3, 0x28, 0x1b, 0xde,
	0x47, 0x57, 0xec, 0x15, 0x4e, 0x1d, 0xba, 0x37, 0xac, 0x24, 0x99, 0x4a, 0xcf, 0x3d, 0xd6, 0xda,
	0x93, 0xd1, 0x21, 0x4d, 0x78, 0x92, 0xed, 0x4f, 0xae, 0xfb, 0xd2, 0xde, 0x29, 0x6b, 0x68, 0x9b,
	0x6e, 0x06, 0xac, 0xe9, 0x0b, 0x07, 0xbb, 0x0b, 0xe7, 0x70, 0x52, 0xea, 0x85, 0x37, 0x81, 0x4c,
	0xf1, 0xcb, 0x38, 0xdc, 0xdd, 0x78, 0x06, 0x6c, 0x63, 0xcc, 0x4b, 0xaf, 0x43, 0x89, 0x95, 0x4a,
	0xff, 0xb5, 0xad, 0xc4, 0x77, 0xb7, 0x63, 0x0e, 0xc7, 0x3d, 0xe6, 0x00, 0x06, 0x4e, 0xda, 0x55,
	0xdd, 0x51, 0xb6, 0xf7, 0x70, 0x01, 0xe7, 0x05, 0x5a, 0xd1, 0x58, 0x5a, 0xf8, 0x0f, 0x14, 0x75,
	0x25, 0xe9, 0x13, 0xbd, 0x15, 0x41, 0x7d, 0xad, 0x03, 0xfd, 0x04, 0x00, 0x00, 0xff, 0xff, 0x1d,
	0xa0, 0xa2, 0x41, 0xf6, 0x01, 0x00, 0x00,
}
